#!/usr/bin/env bash

set -Eeuo pipefail

test -n "${DEBUG:-}" && set -x

VBOX_PATH="/cygdrive/c/Program Files/Oracle/VirtualBox/VBoxManage.exe"
VBOX_IP=""

function is-cygwin {
  [[ $(uname -o) == "Cygwin" ]]
}

function vbox-ip-addr {
  if [[ -z "$VBOX_IP" ]]; then
    # NB: I'm unsure if it's possible to get the IP address of the VM w/o guest additions being already
    # installed in the vm ...
    # VBOX_IP="$("$VBOX_PATH" list bridgedifs | grep IPAddress | awk '{print $2}' | sed 's/\r//')"
    VBOX_IP="$("$VBOX_PATH"  guestproperty enumerate automate-dev-setup | grep IP | tr , \\n | grep value: | awk '{print $2}')"
  fi
  echo -n "$VBOX_IP"
}

function vbox-bootstrap {
  local ipaddr do_bootstrap
  do_bootstrap=""
  ipaddr="$(vbox-ip-addr)"

  while [[ ${1:-} == -* ]]; do
    case "${1:-}" in
      --skip-bootstrap)
        shift
        do_bootstrap="no"
        ;;
      *)
        echo "ERROR: unrecognized opiton: ${1:-}"
        shift
        ;;
    esac
  done

  echo "NOTE: guest additions must already be installed in the running virtualbox vm"
  echo ""

  if [[ $do_bootstrap == yes ]]; then
    echo "nc -l -p 2222 | bash"
    echo "bash $HOME/local-bootstrap.sh"
    echo ""
    echo "press enter to continue"
    read input
    cat ./files/setup/vbox-local-bootstrap.sh | nc "$ipaddr" 2222
  fi

  echo "..copying over .ssh"
  rsync -avz $HOME/.ssh "kyle@$(vbox-ip-addr):"
  rsync -avz ./files/setup/vbox-local-bootstrap.sh "kyle@$(vbox-ip-addr):"

  echo "..do git clone"
  ssh "kyle@$(vbox-ip-addr)" "bash vbox-local-bootstrap.sh part2"


  echo "..run local bootstrap"
}

function cmd.vbox {
  local cmd vmname input
  cmd="${1:-}"

  case "$cmd" in
    bootstrap)
      shift
      vbox-bootstrap "$@"
      ;;
    ip)
      echo "$(vbox-ip-addr)"
      ;;
    ls)
      shift
      vmname="${1:-}"
      if [[ -n "$vmname" ]]; then
        "$VBOX_PATH" showvminfo "$vmname"
        "$VBOX_PATH" guestproperty enumerate "$vmname"
        "$VBOX_PATH" guestproperty get "$vmname" "/VirtualBox/GuestInfo/Net/0/V4/IP"
      else
        "$VBOX_PATH" list runningvms
      fi
      ;;
    help)
        "$VBOX_PATH" "$@"
      ;;
    *)
      echo "setup vbox ..."
      echo "  vbox ls       bootstrap ip list running virtualbox vms"
      ;;
  esac
}

function cmd.diff {
  echo "[diff] ~/.bash.d"
  git diff --no-index ~/.bash.d ./files/home/kyle/.bash.d

  for fname in .bashrc .dictrc .editrc .gemrc .gitconfig .gitignore .profile .screenrc .tmux.conf .vimrc .config/openbox/rc.xml; do
    echo "[diff] $fname"
    git diff --no-index "$HOME/$fname" "./files/home/kyle/$fname"
  done


}

function cmd.snapshot {
  echo "snapshot - take a local snapshot of any newly installed software (apt or homebrew)"
}

function cmd.install-chrome {
  if ! which chrome; then
    echo "[install] install chrome ..."
    (
    cd ./software
    test -f ./google-chrome-stable_current_amd64.deb || wget "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
    sudo apt install ./google-chrome-stable_current_amd64.deb
    )
  fi
}

function cmd.install {
  test -d ./software || mkdir ./software

  echo "install - bring the local system up to date with any new changes or additions"
  grep -v '^%' ./files/setup/apt.packages | grep -v '^#' | xargs sudo apt-get install -y

  sudo groupadd docker || :
  sudo usermod -aG docker kyle || :

  cmd.install-chrome
  rsync -avz ./files/home/kyle/ ~/

  if [[ ! -d ~/.vim/bundle/Vundle.vim ]]; then
    git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
  fi
  vim +PluginInstall +qall

  if [[ ! -d ~/.profile.d ]]; then
    git clone git@github.com:kyleburton/profile.git ~/.profile.d
  fi

  for repo in bake; do
    if [[ ! -d "$HOME/code/github.com/kyleburton/$repo" ]]; then
      git clone "git@github.com:kyleburton/$repo.git" "$HOME/code/github.com/kyleburton/$repo"
    fi
  done

  echo "[install] install homebrew ..."
  bash ./files/setup/brew-install.sh

  echo "[install] install homebrew packages ..."
  PATH="$PATH:/home/linuxbrew/.linuxbrew/bin"
  export PATH
  grep -v '^%' ./files/setup/brew.packages | grep -v '^#' | xargs brew install

  echo "[install] clone git repos ... "
  (
  cd ~/code/github.com/kyleburton
  test -d krbemacs || git clone git@github.com:kyleburton/krbemacs.git
  # if [[ ! -L ~/.emacs ]]; then
  #   test -f ~/.emacs && mv ~/.emacs ~/.dist.emacs
  #   ln -s $HOME/code/github.com/kyleburton/krbemacs/.emacs ~/
  # fi
  )
  echo "[install] asdf packages ..."
  for plugin in golang terraform; do
    echo "          ... asdf plugin add $plugin"
    asdf plugin add "$plugin"     || :
    asdf install "$plugin" latest || :
    asdf global "$plugin" latest
  done

  # TODO: make this idempotent - godoc
  go install -v golang.org/x/tools/cmd/godoc@latest
  # TODO: make this idempotent - godef
  # TODO: fix the deprecation warning - godef
  go get github.com/rogpeppe/godef

  echo "[install] concatenate bash sources ..."
  echo "[install] COMPLETED - Happy Coding!"
}

function main {
  local cmd
    cmd="${1:-}"

  case "$cmd" in
    install)
      shift
      cmd.install "$@"
      ;;
    snapshot)
      shift
      cmd.snapshot "$@"
      ;;
    vbox)
      shift
      cmd.vbox "$@"
      ;;
    diff)
      shift
      cmd.diff "$@"
      ;;
    *)
      echo "setup install|snapshot|vbox"
      ;;
  esac
}

main "$@"
