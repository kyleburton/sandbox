h1. Maven JAXB Example

This is an example, or template, project that shows how to use JAXB to generate a set of Java classes for an XSD.

h1. Project Layout

<pre class="code">
user@host jaxb/$ tree
.
|-- README.textile
|-- pom.xml
`-- src
    |-- main
    |   |-- java
    |   |   `-- com
    |   |       `-- github
    |   |           `-- kyleburton
    |   |               `-- MusicLibrary.java
    |   `-- resources
    |       `-- schema
    |           `-- music.xsd
    `-- test
        `-- java
            `-- com
                `-- github
                    `-- kyleburton
                        `-- MusicLibraryTest.java
</pre>

h1. The XSD (XML Schema Definition)

<pre class="code">
user@host jaxb/$ cat src/main/resources/schema/music.xsd

    <?xml version="1.0" encoding="UTF-8"?>
    <xs:schema version="0.2"
      xmlns="http://www.algoconnectone.com/collateralProtocol"
      targetNamespace="http://www.algoconnectone.com/collateralProtocol"
      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      elementFormDefault="qualified"

      xmlns:jxb="http://java.sun.com/xml/ns/jaxb"
      jxb:version="1.0">

      <xs:element name="music-library" type="MusicLibrary" />

      <xs:complexType name="MusicLibrary">
        <xs:sequence>
          <xs:element name="album-details"        type="AlbumDetails" />
        </xs:sequence>
        <xs:attribute name="schemaVersion" type="xs:string" use="required" />
      </xs:complexType>

      <xs:complexType name="AlbumDetails">
        <xs:sequence>
          <xs:element minOccurs="0" name="artistId"        type="xs:string" />
          <xs:element minOccurs="0" name="title"           type="xs:string" />
          <xs:element minOccurs="0" name="productionDate"  type="xs:dateTime" />
          <xs:element minOccurs="0" name="purchaseDate"    type="xs:dateTime" />
          <xs:element minOccurs="0" name="mediaType"       type="MediaType" />
        </xs:sequence>
      </xs:complexType>

      <xs:simpleType name="MediaType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="long-play-record" />
          <xs:enumeration value="compact-disk" />
          <xs:enumeration value="eight-track-tape" />
          <xs:enumeration value="cassette-tape" />
          <xs:enumeration value="mini-disk" />
          <xs:enumeration value="digital-mp3" />
          <xs:enumeration value="digital-aac" />
          <xs:enumeration value="digital-wav" />
          <xs:enumeration value="other" />
        </xs:restriction>
      </xs:simpleType>

    </xs:schema>
</pre>


h1. Generating the Jaxb Classes

<pre class="code">
user@host jaxb/$ mvn generate-sources
</pre>


<pre class="code">
user@host jaxb/$ tree src/main/generated/
src/main/generated/
`-- java
    `-- com
        `-- algoconnectone
            `-- collateralprotocol
                |-- AlbumDetails.java
                |-- MediaType.java
                |-- MusicLibrary.java
                |-- ObjectFactory.java
                `-- package-info.java
</pre>