{
  "name": "line-reader",
  "version": "0.2.4",
  "description": "Asynchronous line-by-line file reader",
  "url": "https://github.com/nickewing/line-reader",
  "keywords": [
    "file",
    "line",
    "reader",
    "scanner"
  ],
  "author": {
    "name": "Nick Ewing",
    "email": "nick@nickewing.net"
  },
  "directories": {
    "lib": "./lib"
  },
  "main": "./lib/line_reader",
  "repository": {
    "type": "git",
    "url": "https://nickewing@github.com/nickewing/line-reader.git"
  },
  "readme": "Line Reader\n===========\n\nAsynchronous line-by-line file reader.\n\nInstall\n-------\n\n`npm install line-reader`\n\nUsage\n-----\n\nThe `eachLine` function reads each line of the given file.  Upon each new line,\nthe given callback function is called with two parameters: the line read and a\nboolean value specifying whether the line read was the last line of the file.\nIf the callback returns `false`, reading will stop and the file will be closed.\n\n    var lineReader = require('line-reader');\n\n    lineReader.eachLine('file.txt', function(line, last) {\n      console.log(line);\n\n      if (/* done */) {\n        return false; // stop reading\n      }\n    });\n\n`eachLine` can also be used in an asynchronous manner by providing a third\ncallback parameter like so:\n\n    var lineReader = require('line-reader');\n\n    lineReader.eachLine('file.txt', function(line, last, cb) {\n      console.log(line);\n\n      if (/* done */) {\n        cb(false); // stop reading\n      } else {\n        cb();\n      }\n    });\n\nThe `eachLine` function also returns an object with one property, `then`.  If a\ncallback is provided to `then`, it will be called once all lines have been read.\n\n    var lineReader = require('line-reader');\n\n    // read all lines:\n    lineReader.eachLine('file.txt', function(line) {\n      console.log(line);\n    }).then(function () {\n      console.log(\"I'm done!!\");\n    });\n\n\nFor more granular control, `open`, `hasNextLine`, and `nextLine` maybe be used\nto iterate a file:\n\n    // or read line by line:\n    lineReader.open('file.txt', function(reader) {\n      if (reader.hasNextLine()) {\n        reader.nextLine(function(line) {\n          console.log(line);\n        });\n      }\n    });\n\nContributors\n------------\n\n* Nick Ewing\n* Jameson Little (beatgammit)\n\nCopyright 2011 Nick Ewing.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/nickewing/line-reader/issues"
  },
  "_id": "line-reader@0.2.4",
  "dist": {
    "shasum": "a7b37153f50a91b75e6c6777cda0c4a23544e0b6"
  },
  "_from": "line-reader@latest",
  "_resolved": "https://registry.npmjs.org/line-reader/-/line-reader-0.2.4.tgz"
}
