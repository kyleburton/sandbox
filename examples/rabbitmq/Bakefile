#!/usr/bin/env bash

function ensure-download () {
  local pkgurl="$1"
  local pkgfile="${2:-$(basename $pkgurl)}"
  #echo "pkgurl=$pkgurl"
  #echo "pkgfile=$pkgfile"
  test -f $pkgfile || curl $pkgurl > $pkgfile
}

function ensure-extracted () {
  local pkgfile="$1"
  pkgfile="$(basename $pkgfile)"

  case $pkgfile in
    *.tar.gz)
      local pkgdir="${2:-$(basename $pkgfile .tar.gz)}"
      test -d $pkgdir || tar xzvf $pkgfile
      ;;
    *)
      echo "Error: don't know how to unarchive: $pkgfile"
      exit 1
      ;;
  esac
}

bake_task rabbitmq-install
rabbitmq-install () {
  bake_cd software
  ensure-download  "$RABBITMQ_3_1_2_PACKAGE_URL"
  ensure-extracted "$RABBITMQ_3_1_2_PACKAGE_URL" "rabbitmq_server-3.1.2"
  ensure-download  "$RABBITMQ_3_4_4_PACKAGE_URL"
  ensure-extracted "$RABBITMQ_3_4_4_PACKAGE_URL" "rabbitmq_server-3.4.4"
  bake_cd
  ./software/rabbitmq_server-3.4.4/sbin/rabbitmq-plugins enable rabbitmq_management
}

bake_task rabbitmq-run
function rabbitmq-run () {
  local version="${1:-3.4.4}"
  echo ""
  echo "  Press CTRL-C twice to stop rabbitmq"
  echo ""
  echo "  You can open http://localhost:15672/ to view the management console (guest/guest"
  echo ""
  echo ""
  ./software/rabbitmq_server-$version/sbin/rabbitmq-server
}

# function rabbitmq-gui () {
#   open "http://localhost:15672/"
# }
 
function redis-dir () {
  basename "$REDIS_2_8_19_PACKAGE_URL" .tar.gz
}

bake_task redis-install
redis-install () {
  ensure-download  "$REDIS_2_8_19_PACKAGE_URL"
  ensure-extracted "$REDIS_2_8_19_PACKAGE_URL"
  bake_cd
  if [ ! -e ./software/$(redis-dir)/src/redis-server ]; then
    bake_cd ./software/$(redis-dir)/
    make
  fi
}

bake_task install
function install () {
  rabbitmq-install
  redis-install
}

function init () {
  bake_cd
  source config/env.sh
  test -d software || mkdir software
}

init
